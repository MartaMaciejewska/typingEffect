{"ast":null,"code":"import _toConsumableArray from \"/home/marta/Pulpit/typer/typer-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/marta/Pulpit/typer/typer-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/marta/Pulpit/typer/typer-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/marta/Pulpit/typer/typer-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/marta/Pulpit/typer/typer-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/marta/Pulpit/typer/typer-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/marta/Pulpit/typer/typer-app/src/App.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './App.css';\n\nvar Typer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Typer, _Component);\n\n  function Typer(props) {\n    var _this;\n\n    _classCallCheck(this, Typer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Typer).call(this, props));\n    _this.state = {\n      typingSpeed: _this.props.speed,\n      sentenceArr: [_this.props.heading].concat(_toConsumableArray(_this.props.messages)),\n      text1: \"\",\n      text2: \"\" //     this.typing= ((arr)=> {\n      //       let counter=0;\n      //       this.typingInt=setInterval(()=>{\n      //         counter+=1;\n      //         this.setState({\n      //           text1: arr[0].slice(0, counter),\n      //           })\n      //             if(counter === arr[0].length){\n      //               let subCounter=0;\n      //               this.typing=setInterval(()=>{\n      //                 subCounter+=1;\n      //               this.setState({\n      //                 text2: arr[1].slice(0, subCounter)\n      //               })\n      //             }, this.state.typingSpeed)\n      //         } else if (counter===arr[0].length-1+arr[1].length-1){\n      //           let subCounter=0;\n      //             this.nextTyping=setInterval(()=>{\n      //             this.setState({\n      //               text2: arr[2].slice(0, subCounter)\n      //           })\n      //           console.log(counter)\n      //           }, this.state.typingSpeed)\n      //         }\n      //     }, this.state.typingSpeed)\n      //   })\n      // }\n\n    };\n    var heading = \"\";\n    var messages = [];\n\n    for (var i = 0; i < _this.state.sentenceArr.length; i++) {\n      i === 0 ? heading = _this.state.sentenceArr[i] : messages.push(_this.state.sentenceArr[i]);\n    }\n\n    _this.typing = function () {\n      var counter = 0;\n      var subCounter = 0;\n      _this.subTyping = setTimeout(function () {\n        subCounter += 1;\n\n        _this.setState({\n          text1: heading.slice(0, subCounter)\n        });\n\n        if (subCounter === heading.length) {\n          counter += 1;\n          var _i = 0;\n          var count = 0;\n          var selectedText = \"\";\n          var text = \"\"(function type() {\n            if (count === messages.length) {\n              count = 0;\n            }\n\n            selectedText = messages[count];\n            text = selectedText.slice(0, ++_i);\n            this.setState({\n              text2: text\n            });\n\n            if (text.length === selectedText.length) {\n              count++;\n              _i = 0;\n            }\n\n            setTimeout(type, this.state.typingSpeed);\n          }());\n        } //     counter++;\n        //     if(messages[i].length<subCounter2){\n        //     this.msgTyping=setInterval(()=>{\n        //       subCounter2+=1;\n        //       this.setState({\n        //       text2: messages[i].slice(0,subCounter2)\n        //       })\n        //     },this.state.typingSpeed)\n        //   } else {\n        //     this.msgTyping=setInterval(()=>{\n        //       subCounter2+=1;\n        //       this.setState({\n        //       text2: messages[i+1].slice(0,subCounter2)\n        //       })\n        //     },this.state.typingSpeed)\n        //   }\n        // }    \n        //   if (counter===1){\n        //    // clearInterval(this.subTyping)\n        //     subCounter=0;\n        //     this.msgTyping=setInterval(()=>{\n        //       subCounter++;\n        //         this.setState({\n        //           text2: messages[counter].slice(0,subCounter)\n        //         })\n        //     },this.state.typingSpeed)\n        //   }\n        // })\n        // if (counter>this.state.sentenceArr.length-2){\n        //     clearInterval(this.interval) \n        // }\n\n      }, _this.state.typingSpeed);\n    };\n\n    return _this;\n  }\n\n  _createClass(Typer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.typing();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, this.state.text1), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \" \", this.state.text2));\n    }\n  }]);\n\n  return Typer;\n}(Component);\n\nTyper.propTypes = {\n  speed: PropTypes.number,\n  heading: PropTypes.string,\n  messages: PropTypes.arrayOf(PropTypes.string),\n  infinite: PropTypes.bool\n};\n\nvar TyperExample =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(TyperExample, _Component2);\n\n  function TyperExample() {\n    _classCallCheck(this, TyperExample);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TyperExample).apply(this, arguments));\n  }\n\n  _createClass(TyperExample, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Typer, {\n        heading: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n        messages: [\"Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\", \"Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\", \"That's all, folks!\"],\n        speed: 100,\n        infinite: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return TyperExample;\n}(Component);\n\nexport default TyperExample;","map":{"version":3,"sources":["/home/marta/Pulpit/typer/typer-app/src/App.js"],"names":["React","Component","PropTypes","Typer","props","state","typingSpeed","speed","sentenceArr","heading","messages","text1","text2","i","length","push","typing","counter","subCounter","subTyping","setTimeout","setState","slice","count","selectedText","text","type","propTypes","number","string","arrayOf","infinite","bool","TyperExample"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './App.css';\n\n\nclass Typer extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      typingSpeed: this.props.speed,\n      sentenceArr: [this.props.heading , ...this.props.messages],\n      text1: \"\",\n      text2: \"\",\n    }\n\n//     this.typing= ((arr)=> {\n//       let counter=0;\n//       this.typingInt=setInterval(()=>{\n//         counter+=1;\n//         this.setState({\n//           text1: arr[0].slice(0, counter),\n//           })\n//             if(counter === arr[0].length){\n//               let subCounter=0;\n//               this.typing=setInterval(()=>{\n//                 subCounter+=1;\n//               this.setState({\n//                 text2: arr[1].slice(0, subCounter)\n//               })\n//             }, this.state.typingSpeed)\n//         } else if (counter===arr[0].length-1+arr[1].length-1){\n//           let subCounter=0;\n//             this.nextTyping=setInterval(()=>{\n//             this.setState({\n//               text2: arr[2].slice(0, subCounter)\n//           })\n//           console.log(counter)\n//           }, this.state.typingSpeed)\n//         }\n//     }, this.state.typingSpeed)\n//   })\n// }\n  let heading=\"\";\n  let messages=[];\n  for (let i=0; i< this.state.sentenceArr.length; i++){\n  i===0 ? heading=this.state.sentenceArr[i] : messages.push(this.state.sentenceArr[i]);\n  }\n      \n  this.typing = (()=>{\n    let counter=0;\n    let subCounter=0;\n    this.subTyping=setTimeout(()=>{\n        subCounter+=1;\n           this.setState({\n           text1: heading.slice(0, subCounter),\n           })\n           if(subCounter===heading.length){\n            counter+=1;\n            let i=0;\n            let count =0;\n            let selectedText =\"\";\n            let text=\"\"\n            (function type(){\n              if(count===messages.length){\n                count=0\n              }\n              selectedText=messages[count];\n              text=selectedText.slice(0,++i)\n            \n              this.setState({\n                text2: text,\n              })\n\n              if(text.length === selectedText.length){\n                count++;\n                i=0;\n              }\n              setTimeout(type, this.state.typingSpeed)\n             }());\n            }\n            \n          //     counter++;\n          //     if(messages[i].length<subCounter2){\n          //     this.msgTyping=setInterval(()=>{\n          //       subCounter2+=1;\n          //       this.setState({\n          //       text2: messages[i].slice(0,subCounter2)\n          //       })\n          //     },this.state.typingSpeed)\n          //   } else {\n          //     this.msgTyping=setInterval(()=>{\n          //       subCounter2+=1;\n          //       this.setState({\n          //       text2: messages[i+1].slice(0,subCounter2)\n          //       })\n          //     },this.state.typingSpeed)\n          //   }\n          // }    \n\n  //   if (counter===1){\n  //    // clearInterval(this.subTyping)\n  //     subCounter=0;\n  //     this.msgTyping=setInterval(()=>{\n  //       subCounter++;\n  //         this.setState({\n  //           text2: messages[counter].slice(0,subCounter)\n  //         })\n  //     },this.state.typingSpeed)\n  //   }\n  // })\n  // if (counter>this.state.sentenceArr.length-2){\n  //     clearInterval(this.interval) \n  // }\n},this.state.typingSpeed)\n  })\n}\n\n\ncomponentDidMount(){\nthis.typing();\n}\n\n  render(){\n    return (\n      <>\n          <p>{this.state.text1}</p>\n          <p> {this.state.text2}</p>\n      </>\n    );\n  }\n}\n\n\n\n\n\nTyper.propTypes = {\n  speed: PropTypes.number,\n  heading: PropTypes.string,\n  messages: PropTypes.arrayOf(PropTypes.string),\n  infinite: PropTypes.bool\n}\n\nclass TyperExample extends Component {\n  render(){\n    return (\n      <Typer heading=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"\n             messages= {[\"Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\", \n             \"Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\", \"That's all, folks!\" ]}\n             speed={100}\n             infinite={false}\n       ></Typer>\n    )\n  }\n}\n\nexport default TyperExample;\n"]},"metadata":{},"sourceType":"module"}